/*
abstract class AbsDemo
{
	abstract void show1();
	abstract void show2();
}
当一个抽象类中的方法都是抽象的时候，这时可以将抽象类用另一种形式定义和表示，就是接口interface
*/

/*
//定义接口使用的关键字不是class,而是interface
对于接口当中常见的成员：而且这些成员都有固定的修饰符
1>全局常量:public static final
2>抽象方法：public abstract

由此得出结论：接口中的成员都是公共的权限（最大权限）
*/
interface Demo
{
	public static final int NUM=4; //public static final 可以省略
	
	public abstract void show1();//public abstract 可以省略
	public abstract void show2();//public abstract 可以省略
}
//类与类之间是继承关系，类与接口之间是实现关系

/*
接口不可以实例化

只能由实现了接口的子类并覆盖了接口中所有的方法后，该子类才可以实例化
否则，这个子类就是一个抽象类。
*/
class DemoImpl implements /*实现*/Demo
{
	public void show1(){}
	public void show2(){}
}

class InterfaceDemo
{
	public static void main(String[] args)
	{
		DemoImpl d=new DemoImpl();
		System.out.println(d.NUM);
		System.out.println(DemoImpl.NUM);
		System.out.println(Demo.NUM);
	}
}
