			day03
				2017/1/2
Mon:视频学习
Git心得：
*添加远程仓库
1〉要关联一个远程库，使用命令git remote add origin git@server-name:path/repo-name.git；


2〉关联后，使用命令git push -u origin master第一次推送master分支的所有内容；

此后，
3〉每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改；


4>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，
  而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！

*从远程仓库克隆
1〉要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆。


2〉Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快。
3〉使用https除了速度慢以外，还有个最大的麻烦是每次推送都必须输入口令，
   但是在某些只开放http端口的公司内部就无法使用ssh协议而只能用https。
4〉从github上clone可以设置另外一个参数 ,如果没有设置本地目录,就会自动创建一个文件夹

git clone [地址] [本地目录]

*分支管理
1>github的仓库和你本地的仓库是两个独立的仓库，你自己在本地仓库创建的分支，在没有推送到github仓库之前，
  其他人都不可见。

同理，你也看不见其他人在本地创建的分支
2〉在Windows下面gitbash退后的指令是什么？-->cd ..和cd ../都可以

*创建与合并分支
1〉查看分支：git branch

                     2〉创建分支：git branch <name>

 
3〉切换分支：git checkout <name>            4〉

创建+切换分支：git checkout -b <name>


5〉合并某分支到当前分支：git merge <name>

   6〉 删除分支：git branch -d <name>
7〉因为git的分支必须指向一个commit，没有任何commit就没有任何分支

提交第一个commit后git自动创建master分支

*解决冲突
1>当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。
2>

用git log --graph命令可以看到分支合并图
3>pull：本地 <-- 远程    
push：本地 --> 远程

   
 本质上都是同步commit
 

如果你本地落后远程，必然要pull
如果你本地超前远程，必然要push

*分支管理策略
1〉Git分支十分强大，在团队开发中应该充分应用。


2〉合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，
   能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。